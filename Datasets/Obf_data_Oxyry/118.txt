import random #line:15
from pip ._vendor import six #line:16
import sys #line:17
import time #line:18
import traceback #line:19
MAX_WAIT =1073741823 #line:23
def retry (*OOOOOO00O0OO00O00 ,**O0O0OOO000O00O0OO ):#line:26
    ""#line:31
    if len (OOOOOO00O0OO00O00 )==1 and callable (OOOOOO00O0OO00O00 [0 ]):#line:33
        def O00OOOO0O00O0OOOO (O00OOOO0O0OO0000O ):#line:34
            @six .wraps (O00OOOO0O0OO0000O )#line:36
            def OO0O0OO00O0OOO00O (*O0OO0O00O00000OOO ,**O0OOO0000O00000O0 ):#line:37
                return Retrying ().call (O00OOOO0O0OO0000O ,*O0OO0O00O00000OOO ,**O0OOO0000O00000O0 )#line:38
            return OO0O0OO00O0OOO00O #line:40
        return O00OOOO0O00O0OOOO (OOOOOO00O0OO00O00 [0 ])#line:42
    else :#line:44
        def O00OOO0000OOOOOOO (OO00OOO0O0O000OO0 ):#line:45
            @six .wraps (OO00OOO0O0O000OO0 )#line:47
            def O0O00OOOO000O000O (*O0000OOO0OO0000OO ,**O0OO000O00O0000O0 ):#line:48
                return Retrying (*OOOOOO00O0OO00O00 ,**O0O0OOO000O00O0OO ).call (OO00OOO0O0O000OO0 ,*O0000OOO0OO0000OO ,**O0OO000O00O0000O0 )#line:49
            return O0O00OOOO000O000O #line:51
        return O00OOO0000OOOOOOO #line:53
class Retrying (object ):#line:56
    def __init__ (OOO000O00O0O0O0O0 ,stop =None ,wait =None ,stop_max_attempt_number =None ,stop_max_delay =None ,wait_fixed =None ,wait_random_min =None ,wait_random_max =None ,wait_incrementing_start =None ,wait_incrementing_increment =None ,wait_exponential_multiplier =None ,wait_exponential_max =None ,retry_on_exception =None ,retry_on_result =None ,wrap_exception =False ,stop_func =None ,wait_func =None ,wait_jitter_max =None ):#line:71
        OOO000O00O0O0O0O0 ._stop_max_attempt_number =5 if stop_max_attempt_number is None else stop_max_attempt_number #line:73
        OOO000O00O0O0O0O0 ._stop_max_delay =100 if stop_max_delay is None else stop_max_delay #line:74
        OOO000O00O0O0O0O0 ._wait_fixed =1000 if wait_fixed is None else wait_fixed #line:75
        OOO000O00O0O0O0O0 ._wait_random_min =0 if wait_random_min is None else wait_random_min #line:76
        OOO000O00O0O0O0O0 ._wait_random_max =1000 if wait_random_max is None else wait_random_max #line:77
        OOO000O00O0O0O0O0 ._wait_incrementing_start =0 if wait_incrementing_start is None else wait_incrementing_start #line:78
        OOO000O00O0O0O0O0 ._wait_incrementing_increment =100 if wait_incrementing_increment is None else wait_incrementing_increment #line:79
        OOO000O00O0O0O0O0 ._wait_exponential_multiplier =1 if wait_exponential_multiplier is None else wait_exponential_multiplier #line:80
        OOO000O00O0O0O0O0 ._wait_exponential_max =MAX_WAIT if wait_exponential_max is None else wait_exponential_max #line:81
        OOO000O00O0O0O0O0 ._wait_jitter_max =0 if wait_jitter_max is None else wait_jitter_max #line:82
        O000O0O00OOOO0O0O =[]#line:86
        if stop_max_attempt_number is not None :#line:87
            O000O0O00OOOO0O0O .append (OOO000O00O0O0O0O0 .stop_after_attempt )#line:88
        if stop_max_delay is not None :#line:90
            O000O0O00OOOO0O0O .append (OOO000O00O0O0O0O0 .stop_after_delay )#line:91
        if stop_func is not None :#line:93
            OOO000O00O0O0O0O0 .stop =stop_func #line:94
        elif stop is None :#line:96
            OOO000O00O0O0O0O0 .stop =lambda OOO0O0O0000O0O0OO ,O0000O0OOO0O0O000 :any (O00OO00OO0OOOO0O0 (OOO0O0O0000O0O0OO ,O0000O0OOO0O0O000 )for O00OO00OO0OOOO0O0 in O000O0O00OOOO0O0O )#line:97
        else :#line:99
            OOO000O00O0O0O0O0 .stop =getattr (OOO000O00O0O0O0O0 ,stop )#line:100
        OOO0000O00000OO0O =[lambda *OOOOOO0O0O000O000 ,**O0OO000OO0O0O00OO :0 ]#line:104
        if wait_fixed is not None :#line:105
            OOO0000O00000OO0O .append (OOO000O00O0O0O0O0 .fixed_sleep )#line:106
        if wait_random_min is not None or wait_random_max is not None :#line:108
            OOO0000O00000OO0O .append (OOO000O00O0O0O0O0 .random_sleep )#line:109
        if wait_incrementing_start is not None or wait_incrementing_increment is not None :#line:111
            OOO0000O00000OO0O .append (OOO000O00O0O0O0O0 .incrementing_sleep )#line:112
        if wait_exponential_multiplier is not None or wait_exponential_max is not None :#line:114
            OOO0000O00000OO0O .append (OOO000O00O0O0O0O0 .exponential_sleep )#line:115
        if wait_func is not None :#line:117
            OOO000O00O0O0O0O0 .wait =wait_func #line:118
        elif wait is None :#line:120
            OOO000O00O0O0O0O0 .wait =lambda O0O0OO0OOO0O000OO ,O0OOO00OO0OO0O0O0 :max (O0OO0O0O0O0O00000 (O0O0OO0OOO0O000OO ,O0OOO00OO0OO0O0O0 )for O0OO0O0O0O0O00000 in OOO0000O00000OO0O )#line:121
        else :#line:123
            OOO000O00O0O0O0O0 .wait =getattr (OOO000O00O0O0O0O0 ,wait )#line:124
        if retry_on_exception is None :#line:127
            OOO000O00O0O0O0O0 ._retry_on_exception =OOO000O00O0O0O0O0 .always_reject #line:128
        else :#line:129
            OOO000O00O0O0O0O0 ._retry_on_exception =retry_on_exception #line:130
        if retry_on_result is None :#line:134
            OOO000O00O0O0O0O0 ._retry_on_result =OOO000O00O0O0O0O0 .never_reject #line:135
        else :#line:136
            OOO000O00O0O0O0O0 ._retry_on_result =retry_on_result #line:137
        OOO000O00O0O0O0O0 ._wrap_exception =wrap_exception #line:139
    def stop_after_attempt (O0OO0000OO000O00O ,O00OOO0OOOOOOOO0O ,OO00OOOOOO0O00O0O ):#line:141
        ""#line:142
        return O00OOO0OOOOOOOO0O >=O0OO0000OO000O00O ._stop_max_attempt_number #line:143
    def stop_after_delay (OOO000OO0OO0O00O0 ,OO0OO0OOOO0OOOOOO ,O0OOO0000OOO0OOO0 ):#line:145
        ""#line:146
        return O0OOO0000OOO0OOO0 >=OOO000OO0OO0O00O0 ._stop_max_delay #line:147
    def no_sleep (OO0OO0OOO0000O0O0 ,O0OOO0O0O0OOOO0OO ,O0000O0000OOO00O0 ):#line:149
        ""#line:150
        return 0 #line:151
    def fixed_sleep (OO0OO0O0O0OO0OO00 ,O00OOOO0O00O000O0 ,O0O0O0OO00OOOOO0O ):#line:153
        ""#line:154
        return OO0OO0O0O0OO0OO00 ._wait_fixed #line:155
    def random_sleep (O0O0OO000O0O00OO0 ,OO000O0O00OO0O0O0 ,O00OOO00O000000OO ):#line:157
        ""#line:158
        return random .randint (O0O0OO000O0O00OO0 ._wait_random_min ,O0O0OO000O0O00OO0 ._wait_random_max )#line:159
    def incrementing_sleep (O00O0000O0O000O0O ,O0OO0OO0OOOO0O00O ,OO0OO0OOOO0O00O00 ):#line:161
        ""#line:165
        OOOO0O00O000O0000 =O00O0000O0O000O0O ._wait_incrementing_start +(O00O0000O0O000O0O ._wait_incrementing_increment *(O0OO0OO0OOOO0O00O -1 ))#line:166
        if OOOO0O00O000O0000 <0 :#line:167
            OOOO0O00O000O0000 =0 #line:168
        return OOOO0O00O000O0000 #line:169
    def exponential_sleep (OO000000OOO0O0OO0 ,OOOOOO0OO0OO00OO0 ,OO000O0O0O000OOO0 ):#line:171
        OOOOOO000OOOO0000 =2 **OOOOOO0OO0OO00OO0 #line:172
        O000O00O000OOO000 =OO000000OOO0O0OO0 ._wait_exponential_multiplier *OOOOOO000OOOO0000 #line:173
        if O000O00O000OOO000 >OO000000OOO0O0OO0 ._wait_exponential_max :#line:174
            O000O00O000OOO000 =OO000000OOO0O0OO0 ._wait_exponential_max #line:175
        if O000O00O000OOO000 <0 :#line:176
            O000O00O000OOO000 =0 #line:177
        return O000O00O000OOO000 #line:178
    def never_reject (OO0O0000O0OO00O0O ,O000O0O00OO00O00O ):#line:180
        return False #line:181
    def always_reject (OO0O0OOOOO000OOO0 ,OOOO0O00OO0O00OOO ):#line:183
        return True #line:184
    def should_reject (O00O0O0O0OO00O0O0 ,O0O0O0OO0OO00OOOO ):#line:186
        O00O00OOO00O0OO0O =False #line:187
        if O0O0O0OO0OO00OOOO .has_exception :#line:188
            O00O00OOO00O0OO0O |=O00O0O0O0OO00O0O0 ._retry_on_exception (O0O0O0OO0OO00OOOO .value [1 ])#line:189
        else :#line:190
            O00O00OOO00O0OO0O |=O00O0O0O0OO00O0O0 ._retry_on_result (O0O0O0OO0OO00OOOO .value )#line:191
        return O00O00OOO00O0OO0O #line:193
    def call (O0OO000O0000OOOO0 ,O0OO00OOO0O0OO00O ,*O0O0O0O0O0O00O000 ,**OO0O00000O0OOO0O0 ):#line:195
        OO00O0O00OOOOO0OO =int (round (time .time ()*1000 ))#line:196
        O0000O0000000OOO0 =1 #line:197
        while True :#line:198
            try :#line:199
                OO0OOO00O0O0O0O0O =Attempt (O0OO00OOO0O0OO00O (*O0O0O0O0O0O00O000 ,**OO0O00000O0OOO0O0 ),O0000O0000000OOO0 ,False )#line:200
            except :#line:201
                O0000O0000OO0O0OO =sys .exc_info ()#line:202
                OO0OOO00O0O0O0O0O =Attempt (O0000O0000OO0O0OO ,O0000O0000000OOO0 ,True )#line:203
            if not O0OO000O0000OOOO0 .should_reject (OO0OOO00O0O0O0O0O ):#line:205
                return OO0OOO00O0O0O0O0O .get (O0OO000O0000OOOO0 ._wrap_exception )#line:206
            OO0O00O00O00OO0OO =int (round (time .time ()*1000 ))-OO00O0O00OOOOO0OO #line:208
            if O0OO000O0000OOOO0 .stop (O0000O0000000OOO0 ,OO0O00O00O00OO0OO ):#line:209
                if not O0OO000O0000OOOO0 ._wrap_exception and OO0OOO00O0O0O0O0O .has_exception :#line:210
                    raise OO0OOO00O0O0O0O0O .get ()#line:212
                else :#line:213
                    raise RetryError (OO0OOO00O0O0O0O0O )#line:214
            else :#line:215
                OOO0O0O00OO00OO00 =O0OO000O0000OOOO0 .wait (O0000O0000000OOO0 ,OO0O00O00O00OO0OO )#line:216
                if O0OO000O0000OOOO0 ._wait_jitter_max :#line:217
                    OOO0OOO00O000OOO0 =random .random ()*O0OO000O0000OOOO0 ._wait_jitter_max #line:218
                    OOO0O0O00OO00OO00 =OOO0O0O00OO00OO00 +max (0 ,OOO0OOO00O000OOO0 )#line:219
                time .sleep (OOO0O0O00OO00OO00 /1000.0 )#line:220
            O0000O0000000OOO0 +=1 #line:222
class Attempt (object ):#line:225
    ""#line:230
    def __init__ (O00O00OOO0O0O000O ,O0OOOO0O00O0OOO0O ,O0OOO00000O0OOOO0 ,O000OO00OO00O00O0 ):#line:232
        O00O00OOO0O0O000O .value =O0OOOO0O00O0OOO0O #line:233
        O00O00OOO0O0O000O .attempt_number =O0OOO00000O0OOOO0 #line:234
        O00O00OOO0O0O000O .has_exception =O000OO00OO00O00O0 #line:235
    def get (OOOO0000O0O0000O0 ,wrap_exception =False ):#line:237
        ""#line:242
        if OOOO0000O0O0000O0 .has_exception :#line:243
            if wrap_exception :#line:244
                raise RetryError (OOOO0000O0O0000O0 )#line:245
            else :#line:246
                six .reraise (OOOO0000O0O0000O0 .value [0 ],OOOO0000O0O0000O0 .value [1 ],OOOO0000O0O0000O0 .value [2 ])#line:247
        else :#line:248
            return OOOO0000O0O0000O0 .value #line:249
    def __repr__ (OO00O000OOOOO0000 ):#line:251
        if OO00O000OOOOO0000 .has_exception :#line:252
            return "Attempts: {0}, Error:\n{1}".format (OO00O000OOOOO0000 .attempt_number ,"".join (traceback .format_tb (OO00O000OOOOO0000 .value [2 ])))#line:253
        else :#line:254
            return "Attempts: {0}, Value: {1}".format (OO00O000OOOOO0000 .attempt_number ,OO00O000OOOOO0000 .value )#line:255
class RetryError (Exception ):#line:258
    ""#line:261
    def __init__ (O0OOOOO000OO0OO00 ,O0O0O0000OO00OOO0 ):#line:263
        O0OOOOO000OO0OO00 .last_attempt =O0O0O0000OO00OOO0 #line:264
    def __str__ (OO00O0000OOO0O0O0 ):#line:266
        return "RetryError[{0}]".format (OO00O0000OOO0O0O0 .last_attempt )#line:267
