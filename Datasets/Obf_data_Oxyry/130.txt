from __future__ import absolute_import #line:1
import logging #line:3
from collections import OrderedDict #line:4
from pip ._internal .exceptions import InstallationError #line:6
from pip ._internal .utils .logging import indent_log #line:7
from pip ._internal .utils .typing import MYPY_CHECK_RUNNING #line:8
from pip ._internal .wheel import Wheel #line:9
if MYPY_CHECK_RUNNING :#line:11
    from typing import Optional ,List ,Tuple ,Dict ,Iterable #line:12
    from pip ._internal .req .req_install import InstallRequirement #line:13
logger =logging .getLogger (__name__ )#line:16
class RequirementSet (object ):#line:19
    def __init__ (OO0O0000O0OOO000O ,require_hashes =False ,check_supported_wheels =True ):#line:21
        ""#line:24
        OO0O0000O0OOO000O .requirements =OrderedDict ()#line:26
        OO0O0000O0OOO000O .require_hashes =require_hashes #line:27
        OO0O0000O0OOO000O .check_supported_wheels =check_supported_wheels #line:28
        OO0O0000O0OOO000O .requirement_aliases ={}#line:31
        OO0O0000O0OOO000O .unnamed_requirements =[]#line:32
        OO0O0000O0OOO000O .successfully_downloaded =[]#line:33
        OO0O0000O0OOO000O .reqs_to_cleanup =[]#line:34
    def __str__ (OO00OOO000O000000 ):#line:36
        O0O0O0O00OO000O00 =[O00000000O0OOOO0O for O00000000O0OOOO0O in OO00OOO000O000000 .requirements .values ()if not O00000000O0OOOO0O .comes_from ]#line:38
        O0O0O0O00OO000O00 .sort (key =lambda OO000OO00O00OOO0O :OO000OO00O00OOO0O .name .lower ())#line:39
        return ' '.join ([str (O0O0OOOO0OO000O00 .req )for O0O0OOOO0OO000O00 in O0O0O0O00OO000O00 ])#line:40
    def __repr__ (OOOO0O00OO0OO00O0 ):#line:42
        O00000OO0000O000O =[OOO0O0OO00OO00OO0 for OOO0O0OO00OO00OO0 in OOOO0O00OO0OO00O0 .requirements .values ()]#line:43
        O00000OO0000O000O .sort (key =lambda OO0O0O0OOO0O00OO0 :OO0O0O0OOO0O00OO0 .name .lower ())#line:44
        O0O0OOOOO00O000O0 =', '.join ([str (O0O000OO0OO0000O0 .req )for O0O000OO0OO0000O0 in O00000OO0000O000O ])#line:45
        return ('<%s object; %d requirement(s): %s>'%(OOOO0O00OO0OO00O0 .__class__ .__name__ ,len (O00000OO0000O000O ),O0O0OOOOO00O000O0 ))#line:47
    def add_requirement (O0O000OO0000OO000 ,OOOO00O000O00OOOO ,parent_req_name =None ,extras_requested =None ):#line:54
        ""#line:69
        O000O0O00000OOO00 =OOOO00O000O00OOOO .name #line:70
        if not OOOO00O000O00OOOO .match_markers (extras_requested ):#line:73
            logger .info ("Ignoring %s: markers '%s' don't match your environment",O000O0O00000OOO00 ,OOOO00O000O00OOOO .markers ,)#line:77
            return [],None #line:78
        if OOOO00O000O00OOOO .link and OOOO00O000O00OOOO .link .is_wheel :#line:84
            OOOO0OO0OOOOO000O =Wheel (OOOO00O000O00OOOO .link .filename )#line:85
            if O0O000OO0000OO000 .check_supported_wheels and not OOOO0OO0OOOOO000O .supported ():#line:86
                raise InstallationError ("%s is not a supported wheel on this platform."%OOOO0OO0OOOOO000O .filename )#line:90
        assert OOOO00O000O00OOOO .is_direct ==(parent_req_name is None ),("a direct req shouldn't have a parent and also, " "a non direct req should have a parent")#line:96
        if not O000O0O00000OOO00 :#line:100
            O0O000OO0000OO000 .unnamed_requirements .append (OOOO00O000O00OOOO )#line:102
            return [OOOO00O000O00OOOO ],None #line:103
        try :#line:105
            OOOO0O000OOOO00O0 =O0O000OO0000OO000 .get_requirement (O000O0O00000OOO00 )#line:106
        except KeyError :#line:107
            OOOO0O000OOOO00O0 =None #line:108
        O00OO00000OOOO0OO =(parent_req_name is None and OOOO0O000OOOO00O0 and not OOOO0O000OOOO00O0 .constraint and OOOO0O000OOOO00O0 .extras ==OOOO00O000O00OOOO .extras and OOOO0O000OOOO00O0 .req .specifier !=OOOO00O000O00OOOO .req .specifier )#line:116
        if O00OO00000OOOO0OO :#line:117
            raise InstallationError ("Double requirement given: %s (already in %s, name=%r)"%(OOOO00O000O00OOOO ,OOOO0O000OOOO00O0 ,O000O0O00000OOO00 ))#line:121
        if not OOOO0O000OOOO00O0 :#line:125
            O0O000OO0000OO000 .requirements [O000O0O00000OOO00 ]=OOOO00O000O00OOOO #line:126
            if O000O0O00000OOO00 .lower ()!=O000O0O00000OOO00 :#line:128
                O0O000OO0000OO000 .requirement_aliases [O000O0O00000OOO00 .lower ()]=O000O0O00000OOO00 #line:129
            return [OOOO00O000O00OOOO ],OOOO00O000O00OOOO #line:131
        if OOOO00O000O00OOOO .constraint or not OOOO0O000OOOO00O0 .constraint :#line:135
            return [],OOOO0O000OOOO00O0 #line:136
        O0OOO0O0OOO000OO0 =(OOOO00O000O00OOOO .link and not (OOOO0O000OOOO00O0 .link and OOOO00O000O00OOOO .link .path ==OOOO0O000OOOO00O0 .link .path ))#line:144
        if O0OOO0O0OOO000OO0 :#line:145
            O0O000OO0000OO000 .reqs_to_cleanup .append (OOOO00O000O00OOOO )#line:146
            raise InstallationError ("Could not satisfy constraints for '%s': " "installation from path or url cannot be " "constrained to a version"%O000O0O00000OOO00 ,)#line:151
        OOOO0O000OOOO00O0 .constraint =False #line:154
        OOOO0O000OOOO00O0 .extras =tuple (sorted (set (OOOO0O000OOOO00O0 .extras )|set (OOOO00O000O00OOOO .extras )))#line:157
        logger .debug ("Setting %s extras to: %s",OOOO0O000OOOO00O0 ,OOOO0O000OOOO00O0 .extras ,)#line:161
        return [OOOO0O000OOOO00O0 ],OOOO0O000OOOO00O0 #line:164
    def has_requirement (OOOOOO000O0O0000O ,O00OOO0O000000O00 ):#line:166
        OO0O0OOOO00O000O0 =O00OOO0O000000O00 .lower ()#line:168
        if (OO0O0OOOO00O000O0 in OOOOOO000O0O0000O .requirements and not OOOOOO000O0O0000O .requirements [OO0O0OOOO00O000O0 ].constraint or OO0O0OOOO00O000O0 in OOOOOO000O0O0000O .requirement_aliases and not OOOOOO000O0O0000O .requirements [OOOOOO000O0O0000O .requirement_aliases [OO0O0OOOO00O000O0 ]].constraint ):#line:172
            return True #line:173
        return False #line:174
    @property #line:176
    def has_requirements (O0OO0OOOOO0O000O0 ):#line:177
        return list (OOO0OO0OOOO0O000O for OOO0OO0OOOO0O000O in O0OO0OOOOO0O000O0 .requirements .values ()if not OOO0OO0OOOO0O000O .constraint )or O0OO0OOOOO0O000O0 .unnamed_requirements #line:180
    def get_requirement (OO00O0O00O00000O0 ,O000O0OOO00OOOOO0 ):#line:182
        for OOO0OO0O0O00OO0OO in O000O0OOO00OOOOO0 ,O000O0OOO00OOOOO0 .lower ():#line:184
            if OOO0OO0O0O00OO0OO in OO00O0O00O00000O0 .requirements :#line:185
                return OO00O0O00O00000O0 .requirements [OOO0OO0O0O00OO0OO ]#line:186
            if OOO0OO0O0O00OO0OO in OO00O0O00O00000O0 .requirement_aliases :#line:187
                return OO00O0O00O00000O0 .requirements [OO00O0O00O00000O0 .requirement_aliases [OOO0OO0O0O00OO0OO ]]#line:188
        raise KeyError ("No project with the name %r"%O000O0OOO00OOOOO0 )#line:189
    def cleanup_files (OOOO00O00OO0OO000 ):#line:191
        ""#line:193
        logger .debug ('Cleaning up...')#line:194
        with indent_log ():#line:195
            for O0OOOOOOO0OOOO0O0 in OOOO00O00OO0OO000 .reqs_to_cleanup :#line:196
                O0OOOOOOO0OOOO0O0 .remove_temporary_source ()#line:197
