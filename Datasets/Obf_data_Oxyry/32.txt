import unittest #line:1
from unittest .mock import patch ,MagicMock #line:2
import pygame #line:3
import pygame .time #line:4
from display import Display #line:5
from constants import RgbColors ,GameSettings ,Point #line:6
from snake import Snake #line:7
class TestDisplay (unittest .TestCase ):#line:10
    def setUp (O00O0O000000000O0 ):#line:12
        O00O0O000000000O0 .display =Display ()#line:13
        O00O0O000000000O0 .snake =Snake ()#line:14
        O00O0O000000000O0 .display .width =640 #line:15
        O00O0O000000000O0 .display .height =480 #line:16
    @patch ("pygame.init")#line:18
    @patch ("pygame.font.Font")#line:19
    @patch ("pygame.display.set_mode")#line:20
    @patch ("pygame.display.set_caption")#line:21
    @patch ("pygame.time.Clock")#line:22
    def test_init (OOOOO0OOO000OO000 ,OO00OO00000O0O00O ,OO0OO0000O00OO0O0 ,O0O0O0O0OOOO0O0O0 ,O0O00O0OOOO000000 ,OOO0O000OO0OO0OOO ):#line:25
        OO00OO00000O0O00O .return_value =True #line:26
        O00OOO0OOOO0000O0 =MagicMock ()#line:27
        OO0OO0000O00OO0O0 .return_value =O00OOO0OOOO0000O0 #line:28
        O0OO0OOO0OO000OOO =MagicMock ()#line:29
        O0O0O0O0OOOO0O0O0 .return_value =O0OO0OOO0OO000OOO #line:30
        O0O0OOOO0O0OO0O00 =MagicMock ()#line:31
        OOO0O000OO0OO0OOO .return_value =O0O0OOOO0O0OO0O00 #line:32
        O0O0O0O0OOOO0O0O0 .assert_called_with ((GameSettings .WIDTH ,GameSettings .HEIGHT ))#line:34
        O0O00O0OOOO000000 .assert_called_with ("Snake")#line:35
        OOO0O000OO0OO0OOO .assert_called ()#line:36
        OOOOO0OOO000OO000 .assertEqual (OOOOO0OOO000OO000 .display .width ,GameSettings .WIDTH )#line:38
        OOOOO0OOO000OO000 .assertEqual (OOOOO0OOO000OO000 .display .height ,GameSettings .HEIGHT )#line:39
        OOOOO0OOO000OO000 .assertIsInstance (OOOOO0OOO000OO000 .display .font ,pygame .font .Font )#line:40
        OOOOO0OOO000OO000 .assertIsInstance (OOOOO0OOO000OO000 .display .window ,MagicMock )#line:41
        OOOOO0OOO000OO000 .assertIsInstance (OOOOO0OOO000OO000 .display .clock ,MagicMock )#line:42
    @patch ("pygame.init")#line:44
    @patch ("pygame.display.set_mode")#line:45
    @patch ("pygame.display.set_caption")#line:46
    @patch ("pygame.font.Font")#line:47
    @patch ("pygame.time.Clock")#line:48
    def test_init (O0OO000O0O0000OOO ,O00OOO0OOO0OOO00O ,OO0OOOOOOO0000OOO ,O0O00O0O0OO0O0O0O ,O0OOO0000OOO0OOO0 ,O000O0O0000000OO0 ):#line:51
        OOOOOO000OOO0O0O0 =Display ()#line:52
        O000O0O0000000OO0 .assert_called_once ()#line:53
        OO0OOOOOOO0000OOO .assert_called_once ()#line:54
        O0O00O0O0OO0O0O0O .assert_called_with ("Snake")#line:55
        O0OOO0000OOO0OOO0 .assert_called_with ((GameSettings .WIDTH ,GameSettings .HEIGHT ))#line:56
        O00OOO0OOO0OOO00O .assert_called_once ()#line:57
        O0OO000O0O0000OOO .assertIsInstance (OOOOOO000OOO0O0O0 .font ,MagicMock )#line:59
        O0OO000O0O0000OOO .assertIsInstance (OOOOOO000OOO0O0O0 .window ,MagicMock )#line:60
        O0OO000O0O0000OOO .assertIsInstance (OOOOOO000OOO0O0O0 .clock ,MagicMock )#line:61
    @patch ("pygame.draw.rect")#line:63
    @patch ("pygame.font.Font")#line:64
    @patch ("pygame.display.flip")#line:65
    @patch ("pygame.display.set_mode")#line:66
    def test_update_ui (O0OO000O0O0O0000O ,O0O00O00OO00OOOO0 ,O0OO000OOOO0OOOO0 ,OOOO0OOO0O0OOOOO0 ,O000OOOOO0OOO0O0O ):#line:69
        O00000OOOOO0OO00O =O0O00O00OO00OOOO0 .return_value #line:70
        OOO000O0OOO0OO0OO =OOOO0OOO0O0OOOOO0 .return_value #line:71
        OOO000O0OOO0OO0OO .render =MagicMock ()#line:72
        O0OO000O0O0O0000O .food =Point (100 ,100 )#line:74
        O0OO000O0O0O0000O .score =10 #line:75
        O0OO000O0O0O0000O .display .window =O00000OOOOO0OO00O #line:76
        O0OO000O0O0O0000O .display .font =OOO000O0OOO0OO0OO #line:77
        O0OO000O0O0O0000O .high_score =100 #line:78
        O0OO000O0O0O0000O .display .update_ui (O0OO000O0O0O0000O .snake ,O0OO000O0O0O0000O .food ,O0OO000O0O0O0000O .score ,O0OO000O0O0O0000O .high_score )#line:79
        O000OOOOO0OOO0O0O .assert_called ()#line:81
        OOO000O0OOO0OO0OO .render .assert_called ()#line:82
        O0OO000OOOO0OOOO0 .assert_called ()#line:83
    @patch ("pygame.draw.rect")#line:85
    def test_draw_snake (OO0OO00OO0OOOO00O ,OOOO0000OO000O000 ):#line:86
        OOO0OO00O00O0O0O0 =MagicMock ()#line:87
        OOO0OO00O00O0O0O0 .blocks =[Point (0 ,0 ),Point (GameSettings .BLOCK_SIZE ,0 ),Point (2 *GameSettings .BLOCK_SIZE ,0 ),]#line:92
        OO0OO00OO0OOOO00O .display .draw_snake (OOO0OO00O00O0O0O0 )#line:94
        OOOO0000OO000O000 .assert_any_call (OO0OO00OO0OOOO00O .display .window ,RgbColors .BLUE1 ,pygame .Rect (0 ,0 ,GameSettings .BLOCK_SIZE ,GameSettings .BLOCK_SIZE ),)#line:101
        OOOO0000OO000O000 .assert_any_call (OO0OO00OO0OOOO00O .display .window ,RgbColors .BLUE2 ,pygame .Rect (4 ,4 ,12 ,12 ))#line:104
    @patch ("pygame.draw.rect")#line:106
    def test_draw_food (OOO0O000OO0OOO0O0 ,O000OO00OOOOOO0OO ):#line:107
        O0OOO00OO0O0O0OOO =Point (0 ,0 )#line:108
        OOO0O000OO0OOO0O0 .display .draw_food (O0OOO00OO0O0O0OOO )#line:109
        O000OO00OOOOOO0OO .assert_called_once_with (OOO0O000OO0OOO0O0 .display .window ,RgbColors .RED ,pygame .Rect (0 ,0 ,GameSettings .BLOCK_SIZE ,GameSettings .BLOCK_SIZE ),)#line:115
    @patch ("pygame.font.Font")#line:117
    def test_draw_score (OO0O00000OO0OO00O ,OOO0O00O00000O000 ):#line:118
        O0000OOO00OO00OO0 =10 #line:119
        OO0OOOO00O00O000O =OOO0O00O00000O000 .return_value #line:120
        OOO00OO0000O0O0OO =MagicMock ()#line:121
        OO0OOOO00O00O000O .render .return_value =OOO00OO0000O0O0OO #line:122
        OOO00OO0000O0O0OO .get_width .return_value =160 #line:123
        OOO00OO0000O0O0OO .get_height .return_value =120 #line:124
        O0OOO000O000OOOOO =MagicMock ()#line:125
        OO0O00000OO0OO00O .display .window =O0OOO000O000OOOOO #line:126
        OO0O00000OO0OO00O .display .font =OO0OOOO00O00O000O #line:127
        OO0O00000OO0OO00O .display .draw_score (O0000OOO00OO00OO0 )#line:128
        OO0OOOO00O00O000O .render .assert_called_once ()#line:130
        O0OOO000O000OOOOO .blit .assert_called_once ()#line:131
    @patch ("pygame.display.flip")#line:133
    @patch ("pygame.font.Font")#line:134
    def test_render_game_over (O00OO000OOO00OOOO ,OOOOO0O00O0OOOOOO ,OO0O0OOO00O0OO0OO ):#line:135
        OO00O0000OO0OO0O0 =OOOOO0O00O0OOOOOO .return_value #line:136
        O00OO000O000O00O0 =MagicMock ()#line:137
        OO00O0000OO0OO0O0 .render .return_value =O00OO000O000O00O0 #line:138
        O00OO000O000O00O0 .get_width .return_value =160 #line:139
        O00OO000O000O00O0 .get_height .return_value =120 #line:140
        O0OO0OO000OO0OOO0 =MagicMock ()#line:141
        O00OO000OOO00OOOO .display .window =O0OO0OO000OO0OOO0 #line:142
        O00OO000OOO00OOOO .display .render_game_over ()#line:143
        OO00O0000OO0OO0O0 .render .assert_called_once ()#line:145
        O0OO0OO000OO0OOO0 .blit .assert_called_once ()#line:146
        OO0O0OOO00O0OO0OO .assert_called_once ()#line:147
    @patch ("pygame.display.flip")#line:149
    @patch ("pygame.font.Font")#line:150
    def test_render_play_again (O0OO00000O0OO0O0O ,O0OO0OOO00OO000O0 ,O0O0O00OO0O0O0000 ):#line:151
        OO0O0OO0OO00OO00O =O0OO0OOO00OO000O0 .return_value #line:152
        OOOO0O00O0O00O0O0 =MagicMock ()#line:153
        OO0O0OO0OO00OO00O .render .return_value =OOOO0O00O0O00O0O0 #line:154
        OOOO0O00O0O00O0O0 .get_rect .return_value =pygame .Rect (0 ,0 ,100 ,50 )#line:155
        OOO000O000O00O0OO =MagicMock ()#line:156
        O0OO00000O0OO0O0O .display .window =OOO000O000O00O0OO #line:157
        O0OO00000O0OO0O0O .display .render_play_again ()#line:158
        OO0O0OO0OO00OO00O .render .assert_called_once ()#line:160
        OOO000O000O00O0OO .blit .assert_called_once ()#line:161
        O0O0O00OO0O0O0000 .assert_called_once ()#line:162
    @patch ("pygame.font.Font")#line:164
    def test_render_high_score (O0OOO000000O0O0OO ,O0OOOO00O00O00O0O ):#line:165
        O00OO0O0000OOOOO0 =100 #line:166
        OOOOOOO00O000O0O0 =O0OOOO00O00O00O0O .return_value #line:167
        O0O0OO00OO0OOO000 =MagicMock ()#line:168
        OOOOOOO00O000O0O0 .render .return_value =O0O0OO00OO0OOO000 #line:169
        O0O0OO00OO0OOO000 .get_width .return_value =160 #line:170
        O0O0OO00OO0OOO000 .get_height .return_value =120 #line:171
        OOO0O000OOO0000OO =MagicMock ()#line:172
        O0OOO000000O0O0OO .display .window =OOO0O000OOO0000OO #line:173
        O0OOO000000O0O0OO .display .font =OOOOOOO00O000O0O0 #line:174
        O0OOO000000O0O0OO .display .draw_score (O00OO0O0000OOOOO0 )#line:175
        OOOOOOO00O000O0O0 .render .assert_called_once ()#line:177
        OOO0O000OOO0000OO .blit .assert_called_once ()#line:178
    @patch ("pygame.display.flip")#line:180
    @patch ("pygame.font.Font")#line:181
    def test_render_new_high_score (OOO0OO000O00O0000 ,O0OOOOOOO00O00OOO ,OOOO00OO000OOO000 ):#line:182
        O000O0000OOO00000 =O0OOOOOOO00O00OOO .return_value #line:183
        O0OOO00OO0O0O0000 =MagicMock ()#line:184
        O000O0000OOO00000 .render .return_value =O0OOO00OO0O0O0000 #line:185
        O0OOO00OO0O0O0000 .get_rect .return_value =pygame .Rect (0 ,0 ,100 ,50 )#line:186
        O000OO00O0O00O000 =MagicMock ()#line:187
        OOO0OO000O00O0000 .display .window =O000OO00O0O00O000 #line:188
        OOO0OO000O00O0000 .display .render_play_again ()#line:189
        O000O0000OOO00000 .render .assert_called_once ()#line:191
        O000OO00O0O00O000 .blit .assert_called_once ()#line:192
        OOOO00OO000OOO000 .assert_called_once ()#line:193
if __name__ =="__main__":#line:196
    unittest .main ()#line:197
